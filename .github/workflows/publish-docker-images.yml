# Build and publish docker images for the following services:
# UI
# API Server
# Data Analytics Server
# Evaluation Server

name: Publish Docker Images

on:
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      version:
        description: "Dockerhub image version (For example: 2.0.0)"
        required: true

env:
  LATEST_TAG: latest-test
  VERSION_TAG: ${{ github.event.inputs.version || github.ref_name }}
  APP_UI: featbit-ui
  APP_API: featbit-api-server
  APP_DA: featbit-data-analytics-server
  APP_EVAL: featbit-evaluation-server

jobs:
  build-publish:
    name: build and publish image to docker hub
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - # Add support for more platforms with QEMU
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Build and push - UI (current)
        run: echo "build and push ui current"
      #        uses: docker/build-push-action@v3
      #        with:
      #          context: "{{defaultContext}}:modules/front-end"
      #          file: ./Dockerfile
      #          platforms: linux/amd64,linux/arm64
      #          push: true
      #          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_UI }}:${{ env.VERSION_TAG }}
      #          cache-from: type=gha
      #          cache-to: type=gha,mode=max

      - name: Build and push - UI (latest)
        if: github.ref == 'refs/heads/main'
        run: echo "build and push ui latest"
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:modules/front-end"
#          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_UI }}:${{ env.LATEST_TAG }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max

#      - name: Build and push - API-Server (current)
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:modules/back-end"
#          file: ./deploy/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_API }}:${{ env.VERSION_TAG }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
#      - name: Build and push - API-Server (latest)
#        if: github.ref == 'refs/heads/main'
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:modules/back-end"
#          file: ./deploy/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_API }}:${{ env.LATEST_TAG }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
#      - name: Build and push - Data-Analytics-Server (current)
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:modules/data-analytics"
#          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_DA }}:${{ env.VERSION_TAG }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
#      - name: Build and push - Data-Analytics-Server (latest)
#        if: github.ref == 'refs/heads/main'
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:modules/data-analytics"
#          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_DA }}:${{ env.LATEST_TAG }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
#      - name: Build and push - Evaluation-Server
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:modules/evaluation-server"
#          file: ./deploy/Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: |
#            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_EVAL }}:${{ env.VERSION_TAG }}
#            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_EVAL }}:${{ env.LATEST_TAG }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
#      - name: Inspect image
#        run: |
#          docker buildx imagetools inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_UI }}
#
#      - name: Inspect image
#        run: |
#          docker buildx imagetools inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_API }}
#
#      - name: Inspect image
#        run: |
#          docker buildx imagetools inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_DA }}
#
#      - name: Inspect image
#        run: |
#          docker buildx imagetools inspect ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_EVAL }}
